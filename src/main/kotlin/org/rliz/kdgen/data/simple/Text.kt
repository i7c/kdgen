package org.rliz.kdgen.data.simple

import org.rliz.kdgen.data.LazyValue
import org.rliz.kdgen.data.primitive.CountingInt
import java.lang.String.join

class Text(private val length: Int, private val countingInt: CountingInt = CountingInt()) : LazyValue<String> {

    companion object {
        private val words = listOf(
                "Lorem",
                "ipsum",
                "dolor",
                "sit",
                "amet",
                "consectetur",
                "adipiscing",
                "elit",
                "Nihil",
                "sane",
                "Atqui",
                "pugnantibus",
                "et",
                "contrariis",
                "studiis",
                "consiliisque",
                "semper",
                "utens",
                "nihil",
                "quieti",
                "videre",
                "nihil",
                "tranquilli",
                "potest",
                "Quae",
                "dici",
                "eadem",
                "de",
                "ceteris",
                "virtutibus",
                "possunt",
                "quarum",
                "omnium",
                "fundamenta",
                "vos",
                "in",
                "voluptate",
                "tamquam",
                "in",
                "aqua",
                "ponitis",
                "Duo",
                "Reges",
                "constructio",
                "interrete",
                "Quae",
                "quo",
                "sunt",
                "excelsiores",
                "eo",
                "dant",
                "clariora",
                "indicia",
                "naturae",
                "Rapior",
                "illuc",
                "revocat",
                "autem",
                "Antiochus",
                "nec",
                "est",
                "praeterea",
                "quem",
                "audiamus",
                "Hoc",
                "etsi",
                "multimodis",
                "reprehendi",
                "potest",
                "tamen",
                "accipio",
                "quod",
                "dant",
                "Introduci",
                "enim",
                "virtus",
                "nullo",
                "modo",
                "potest",
                "nisi",
                "omnia",
                "quae",
                "leget",
                "quaeque",
                "reiciet",
                "unam",
                "referentur",
                "ad",
                "summam",
                "Quasi",
                "vero",
                "aut",
                "concedatur",
                "in",
                "omnibus",
                "stultis",
                "aeque",
                "magna",
                "esse",
                "vitia",
                "et",
                "eadem",
                "inbecillitate",
                "et",
                "inconstantia",
                "L",
                "Quem",
                "Tiberina",
                "descensio",
                "festo",
                "illo",
                "die",
                "tanto",
                "gaudio",
                "affecit",
                "quanto",
                "L",
                "Neque",
                "solum",
                "ea",
                "communia",
                "verum",
                "etiam",
                "paria",
                "esse",
                "dixerunt",
                "Nam",
                "si",
                "beatus",
                "umquam",
                "fuisset",
                "beatam",
                "vitam",
                "usque",
                "ad",
                "illum",
                "a",
                "Cyro",
                "extructum",
                "rogum",
                "pertulisset",
                "Age",
                "nunc",
                "isti",
                "doceant",
                "vel",
                "tu",
                "potius",
                "quis",
                "enim",
                "ista",
                "melius",
                "Primum",
                "divisit",
                "ineleganter",
                "Quod",
                "enim",
                "testimonium",
                "maius",
                "quaerimus",
                "quae",
                "honesta",
                "et",
                "recta",
                "sint",
                "ipsa",
                "esse",
                "optabilia",
                "per",
                "sese",
                "cum",
                "videamus",
                "tanta",
                "officia",
                "morientis",
                "Perfecto",
                "enim",
                "et",
                "concluso",
                "neque",
                "virtutibus",
                "neque",
                "amicitiis",
                "usquam",
                "locum",
                "esse",
                "si",
                "ad",
                "voluptatem",
                "omnia",
                "referantur",
                "nihil",
                "praeterea",
                "est",
                "magnopere",
                "dicendum",
                "Praeclare",
                "hoc",
                "quidem",
                "Iam",
                "ille",
                "sorites",
                "quo",
                "nihil",
                "putatis",
                "esse",
                "vitiosius",
                "quod",
                "bonum",
                "sit",
                "id",
                "esse",
                "optabile",
                "quod",
                "optabile",
                "id",
                "expetendum",
                "quod",
                "expetendum",
                "id",
                "laudabile",
                "deinde",
                "reliqui",
                "gradus",
                "Potius",
                "inflammat",
                "ut",
                "coercendi",
                "magis",
                "quam",
                "dedocendi",
                "esse",
                "videantur",
                "Nisi",
                "enim",
                "id",
                "faceret",
                "cur",
                "Plato",
                "Aegyptum",
                "peragravit",
                "ut",
                "a",
                "sacerdotibus",
                "barbaris",
                "numeros",
                "et",
                "caelestia",
                "acciperet",
                "Qui",
                "convenit",
                "Nam",
                "si",
                "quae",
                "sunt",
                "aliae",
                "falsum",
                "est",
                "omnis",
                "animi",
                "voluptates",
                "esse",
                "e",
                "corporis",
                "societate"
        )
    }

    override fun eval(): String {
        val start = countingInt.eval() % words.size
        val end = start + length
        val headEnd = Math.min(end, words.size)
        val head = words.subList(start, headEnd)

        val tailStart = headEnd % words.size
        val tailEnd = end % words.size
        val tail = if (tailStart <= tailEnd) words.subList(tailStart, tailEnd) else emptyList()
        return join(" ", head + tail)
    }
}
